// Generated from Minijava.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MinijavaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__29=1, T__28=2, T__27=3, T__26=4, T__25=5, T__24=6, T__23=7, T__22=8, 
		T__21=9, T__20=10, T__19=11, T__18=12, T__17=13, T__16=14, T__15=15, T__14=16, 
		T__13=17, T__12=18, T__11=19, T__10=20, T__9=21, T__8=22, T__7=23, T__6=24, 
		T__5=25, T__4=26, T__3=27, T__2=28, T__1=29, T__0=30, ID=31, INT=32, OP=33, 
		COMMENT_LINE=34, COMMENT=35, WS=36;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'"
	};
	public static final String[] ruleNames = {
		"T__29", "T__28", "T__27", "T__26", "T__25", "T__24", "T__23", "T__22", 
		"T__21", "T__20", "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", 
		"T__13", "T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", 
		"T__4", "T__3", "T__2", "T__1", "T__0", "ID", "INT", "OP", "COMMENT_LINE", 
		"COMMENT", "WS"
	};


	public MinijavaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Minijava.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2&\u0111\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\4"+
		"\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3"+
		"\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3"+
		"\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3"+
		"\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3"+
		"\22\3\22\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3"+
		"\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3"+
		"\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\31\3"+
		"\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3"+
		"\33\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3"+
		"\36\3\37\3\37\3 \3 \7 \u00e1\n \f \16 \u00e4\13 \3!\6!\u00e7\n!\r!\16"+
		"!\u00e8\3\"\3\"\3\"\5\"\u00ee\n\"\3#\3#\3#\3#\7#\u00f4\n#\f#\16#\u00f7"+
		"\13#\3#\3#\3#\3#\3$\3$\3$\3$\7$\u0101\n$\f$\16$\u0104\13$\3$\3$\3$\3$"+
		"\3$\3%\6%\u010c\n%\r%\16%\u010d\3%\3%\4\u00f5\u0102\2&\3\3\5\4\7\5\t\6"+
		"\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24"+
		"\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&\3"+
		"\2\7\5\2C\\aac|\6\2\62;C\\aac|\3\2\62;\5\2,-//>>\5\2\13\f\17\17\"\"\u0116"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\3K\3\2\2\2\5P\3\2\2\2\7T\3\2\2\2\tY\3\2\2\2\13`\3\2\2\2"+
		"\rf\3\2\2\2\17l\3\2\2\2\21n\3\2\2\2\23s\3\2\2\2\25u\3\2\2\2\27w\3\2\2"+
		"\2\31\177\3\2\2\2\33\u0081\3\2\2\2\35\u0084\3\2\2\2\37\u0088\3\2\2\2!"+
		"\u0090\3\2\2\2#\u0092\3\2\2\2%\u0097\3\2\2\2\'\u0099\3\2\2\2)\u009f\3"+
		"\2\2\2+\u00a1\3\2\2\2-\u00a9\3\2\2\2/\u00bc\3\2\2\2\61\u00be\3\2\2\2\63"+
		"\u00c5\3\2\2\2\65\u00c7\3\2\2\2\67\u00ce\3\2\2\29\u00d0\3\2\2\2;\u00d7"+
		"\3\2\2\2=\u00dc\3\2\2\2?\u00de\3\2\2\2A\u00e6\3\2\2\2C\u00ed\3\2\2\2E"+
		"\u00ef\3\2\2\2G\u00fc\3\2\2\2I\u010b\3\2\2\2KL\7o\2\2LM\7c\2\2MN\7k\2"+
		"\2NO\7p\2\2O\4\3\2\2\2PQ\7p\2\2QR\7g\2\2RS\7y\2\2S\6\3\2\2\2TU\7v\2\2"+
		"UV\7t\2\2VW\7w\2\2WX\7g\2\2X\b\3\2\2\2YZ\7t\2\2Z[\7g\2\2[\\\7v\2\2\\]"+
		"\7w\2\2]^\7t\2\2^_\7p\2\2_\n\3\2\2\2`a\7e\2\2ab\7n\2\2bc\7c\2\2cd\7u\2"+
		"\2de\7u\2\2e\f\3\2\2\2fg\7y\2\2gh\7j\2\2hi\7k\2\2ij\7n\2\2jk\7g\2\2k\16"+
		"\3\2\2\2lm\7=\2\2m\20\3\2\2\2no\7x\2\2op\7q\2\2pq\7k\2\2qr\7f\2\2r\22"+
		"\3\2\2\2st\7}\2\2t\24\3\2\2\2uv\7?\2\2v\26\3\2\2\2wx\7g\2\2xy\7z\2\2y"+
		"z\7v\2\2z{\7g\2\2{|\7p\2\2|}\7f\2\2}~\7u\2\2~\30\3\2\2\2\177\u0080\7\177"+
		"\2\2\u0080\32\3\2\2\2\u0081\u0082\7k\2\2\u0082\u0083\7h\2\2\u0083\34\3"+
		"\2\2\2\u0084\u0085\7k\2\2\u0085\u0086\7p\2\2\u0086\u0087\7v\2\2\u0087"+
		"\36\3\2\2\2\u0088\u0089\7\60\2\2\u0089\u008a\7n\2\2\u008a\u008b\7g\2\2"+
		"\u008b\u008c\7p\2\2\u008c\u008d\7i\2\2\u008d\u008e\7v\2\2\u008e\u008f"+
		"\7j\2\2\u008f \3\2\2\2\u0090\u0091\7*\2\2\u0091\"\3\2\2\2\u0092\u0093"+
		"\7v\2\2\u0093\u0094\7j\2\2\u0094\u0095\7k\2\2\u0095\u0096\7u\2\2\u0096"+
		"$\3\2\2\2\u0097\u0098\7.\2\2\u0098&\3\2\2\2\u0099\u009a\7h\2\2\u009a\u009b"+
		"\7c\2\2\u009b\u009c\7n\2\2\u009c\u009d\7u\2\2\u009d\u009e\7g\2\2\u009e"+
		"(\3\2\2\2\u009f\u00a0\7\60\2\2\u00a0*\3\2\2\2\u00a1\u00a2\7d\2\2\u00a2"+
		"\u00a3\7q\2\2\u00a3\u00a4\7q\2\2\u00a4\u00a5\7n\2\2\u00a5\u00a6\7g\2\2"+
		"\u00a6\u00a7\7c\2\2\u00a7\u00a8\7p\2\2\u00a8,\3\2\2\2\u00a9\u00aa\7U\2"+
		"\2\u00aa\u00ab\7{\2\2\u00ab\u00ac\7u\2\2\u00ac\u00ad\7v\2\2\u00ad\u00ae"+
		"\7g\2\2\u00ae\u00af\7o\2\2\u00af\u00b0\7\60\2\2\u00b0\u00b1\7q\2\2\u00b1"+
		"\u00b2\7w\2\2\u00b2\u00b3\7v\2\2\u00b3\u00b4\7\60\2\2\u00b4\u00b5\7r\2"+
		"\2\u00b5\u00b6\7t\2\2\u00b6\u00b7\7k\2\2\u00b7\u00b8\7p\2\2\u00b8\u00b9"+
		"\7v\2\2\u00b9\u00ba\7n\2\2\u00ba\u00bb\7p\2\2\u00bb.\3\2\2\2\u00bc\u00bd"+
		"\7]\2\2\u00bd\60\3\2\2\2\u00be\u00bf\7U\2\2\u00bf\u00c0\7v\2\2\u00c0\u00c1"+
		"\7t\2\2\u00c1\u00c2\7k\2\2\u00c2\u00c3\7p\2\2\u00c3\u00c4\7i\2\2\u00c4"+
		"\62\3\2\2\2\u00c5\u00c6\7_\2\2\u00c6\64\3\2\2\2\u00c7\u00c8\7r\2\2\u00c8"+
		"\u00c9\7w\2\2\u00c9\u00ca\7d\2\2\u00ca\u00cb\7n\2\2\u00cb\u00cc\7k\2\2"+
		"\u00cc\u00cd\7e\2\2\u00cd\66\3\2\2\2\u00ce\u00cf\7#\2\2\u00cf8\3\2\2\2"+
		"\u00d0\u00d1\7u\2\2\u00d1\u00d2\7v\2\2\u00d2\u00d3\7c\2\2\u00d3\u00d4"+
		"\7v\2\2\u00d4\u00d5\7k\2\2\u00d5\u00d6\7e\2\2\u00d6:\3\2\2\2\u00d7\u00d8"+
		"\7g\2\2\u00d8\u00d9\7n\2\2\u00d9\u00da\7u\2\2\u00da\u00db\7g\2\2\u00db"+
		"<\3\2\2\2\u00dc\u00dd\7+\2\2\u00dd>\3\2\2\2\u00de\u00e2\t\2\2\2\u00df"+
		"\u00e1\t\3\2\2\u00e0\u00df\3\2\2\2\u00e1\u00e4\3\2\2\2\u00e2\u00e0\3\2"+
		"\2\2\u00e2\u00e3\3\2\2\2\u00e3@\3\2\2\2\u00e4\u00e2\3\2\2\2\u00e5\u00e7"+
		"\t\4\2\2\u00e6\u00e5\3\2\2\2\u00e7\u00e8\3\2\2\2\u00e8\u00e6\3\2\2\2\u00e8"+
		"\u00e9\3\2\2\2\u00e9B\3\2\2\2\u00ea\u00eb\7(\2\2\u00eb\u00ee\7(\2\2\u00ec"+
		"\u00ee\t\5\2\2\u00ed\u00ea\3\2\2\2\u00ed\u00ec\3\2\2\2\u00eeD\3\2\2\2"+
		"\u00ef\u00f0\7\61\2\2\u00f0\u00f1\7\61\2\2\u00f1\u00f5\3\2\2\2\u00f2\u00f4"+
		"\13\2\2\2\u00f3\u00f2\3\2\2\2\u00f4\u00f7\3\2\2\2\u00f5\u00f6\3\2\2\2"+
		"\u00f5\u00f3\3\2\2\2\u00f6\u00f8\3\2\2\2\u00f7\u00f5\3\2\2\2\u00f8\u00f9"+
		"\7\f\2\2\u00f9\u00fa\3\2\2\2\u00fa\u00fb\b#\2\2\u00fbF\3\2\2\2\u00fc\u00fd"+
		"\7\61\2\2\u00fd\u00fe\7,\2\2\u00fe\u0102\3\2\2\2\u00ff\u0101\13\2\2\2"+
		"\u0100\u00ff\3\2\2\2\u0101\u0104\3\2\2\2\u0102\u0103\3\2\2\2\u0102\u0100"+
		"\3\2\2\2\u0103\u0105\3\2\2\2\u0104\u0102\3\2\2\2\u0105\u0106\7,\2\2\u0106"+
		"\u0107\7\61\2\2\u0107\u0108\3\2\2\2\u0108\u0109\b$\2\2\u0109H\3\2\2\2"+
		"\u010a\u010c\t\6\2\2\u010b\u010a\3\2\2\2\u010c\u010d\3\2\2\2\u010d\u010b"+
		"\3\2\2\2\u010d\u010e\3\2\2\2\u010e\u010f\3\2\2\2\u010f\u0110\b%\2\2\u0110"+
		"J\3\2\2\2\t\2\u00e2\u00e8\u00ed\u00f5\u0102\u010d\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}